// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  AUTHOR
  EDITOR
  GUEST
}

enum Status {
  ACTIVE
  PENDING
  TRASHED
}

enum visibility {
  PUBLIC
  PRIVATE
}

enum gender {
  MALE
  FEMALE
  OTHER
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  firstName String
  lastName  String
  posts     Post[]   @relation("UserPosts") // One-to-many relation to Post
  profile   Profile? // One-to-one relation to Profile
  role      Role     @default(GUEST)
  gender    gender
  status    Status   @default(ACTIVE)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([createdAt]) // Index trÃªn field 'createdAt'
}

model Post {
  id         Int        @id @default(autoincrement())
  title      String
  content    String?
  author     User       @relation("UserPosts", fields: [authorId], references: [id])
  authorId   Int
  tagId      Int
  categories Category[]
  tags       Tag[]
  status     Status     @default(ACTIVE)
  visibility visibility @default(PUBLIC)
  published  Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id]) // One-to-one relation to User
  userId Int     @unique // Unique constraint for one-to-one relation
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[] // Many-to-many relation to Post
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[] // Many-to-many relation to Post
}
